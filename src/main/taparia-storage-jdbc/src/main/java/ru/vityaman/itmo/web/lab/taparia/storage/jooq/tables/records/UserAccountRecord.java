/*
 * This file is generated by jOOQ.
 */
package ru.vityaman.itmo.web.lab.taparia.storage.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.vityaman.itmo.web.lab.taparia.storage.jooq.tables.UserAccount;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record4<Long, String, byte[], byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taparia.user_account.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taparia.user_account.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taparia.user_account.login</code>.
     */
    public void setLogin(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taparia.user_account.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taparia.user_account.password_hash</code>.
     */
    public void setPasswordHash(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>taparia.user_account.password_hash</code>.
     */
    public byte[] getPasswordHash() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>taparia.user_account.password_salt</code>.
     */
    public void setPasswordSalt(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>taparia.user_account.password_salt</code>.
     */
    public byte[] getPasswordSalt() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, byte[], byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, byte[], byte[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.LOGIN;
    }

    @Override
    public Field<byte[]> field3() {
        return UserAccount.USER_ACCOUNT.PASSWORD_HASH;
    }

    @Override
    public Field<byte[]> field4() {
        return UserAccount.USER_ACCOUNT.PASSWORD_SALT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public byte[] component3() {
        return getPasswordHash();
    }

    @Override
    public byte[] component4() {
        return getPasswordSalt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public byte[] value3() {
        return getPasswordHash();
    }

    @Override
    public byte[] value4() {
        return getPasswordSalt();
    }

    @Override
    public UserAccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(byte[] value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(byte[] value) {
        setPasswordSalt(value);
        return this;
    }

    @Override
    public UserAccountRecord values(Long value1, String value2, byte[] value3, byte[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(Long id, String login, byte[] passwordHash, byte[] passwordSalt) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setLogin(login);
        setPasswordHash(passwordHash);
        setPasswordSalt(passwordSalt);
    }
}
